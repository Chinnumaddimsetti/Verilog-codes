///////////////////////////////////////////////////////////////////////////////////     TWISTED  RING COUNTER     //////////////////////////////////////////////////////


**********************************************************************************   RTL CODE    ***********************************************************

module twisted_ring_counter (
    input wire clk,
    input wire reset,
    output reg [3:0] q
);

always @(posedge clk or posedge reset) begin
    if (reset) begin
        q <= 4'b0000;
    end else begin
        q <= {~q[0], q[3:1]};
    end
end

endmodule

**********************************************************************************   TB CODE    ***********************************************************

`timescale 1ns/1ps

module tb_twisted_ring_counter;

reg clk;
reg reset;
wire [3:0] q;

twisted_ring_counter uut (
    .clk(clk),
    .reset(reset),
    .q(q)
);

initial begin
    clk = 0;
    forever #5 clk = ~clk;
end

initial begin
    reset = 1;
    #15;
    reset = 0;
    #100;
    reset = 1;
    #10;
    reset = 0;
    #100;
    $finish;
end

initial begin
    $monitor("Time = %0t, Reset = %b, Q = %b", $time, reset, q);
end

endmodule
